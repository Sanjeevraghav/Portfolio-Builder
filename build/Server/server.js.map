{"version":3,"sources":["../../src/Server/server.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAKA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAM,MAAM,mBAAZ,C;;;;AACA,IAAI,GAAJ,CAAQ,gCAAR;AACA,IAAI,GAAJ,CAAQ,0BAAgB,aAAhB,EAAR;AACA,IAAM,SAAS,yBAAf;AACA,IAAI,GAAJ,CAAQ,2BAAS,EAAC,OAAO,eAAK,YAAb,EAAT,CAAR;AACA,IAAI,GAAJ,CAAQ,yBAAM,YAAY,YAAlB,CAAR;AACA,IAAI,GAAJ,CAAQ,OAAO,MAAP,EAAR;AACA,IAAI,GAAJ,CAAQ,OAAO,cAAP,EAAR;AACA,qBAAG,GAAH;AACA,OAAO,GAAP,CAAW,GAAX;AAAA,yEAAgB,iBAAO,GAAP,EAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACN,uBAAK,GAAL,EAAU,sBAAV,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA;;AAIA,OAAO,GAAP,CAAW,SAAX;AAAA,yEAAsB,kBAAO,GAAP,EAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACZ,uBAAK,GAAL,EAAU,qBAAV,EAAiC,EAAC,MAAM,YAAY,aAAnB,EAAjC,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;AAAA;AAAA;AAAA;AAAA;;AAIA,OAAO,IAAP,CAAY,UAAZ;AAAA,yEAAwB,kBAAgB,GAAhB,EAAqB,IAArB;AAAA,kBACb,MADa,EAEhB,OAFgB,EAYhB,WAZgB,EAehB,WAfgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACG,2BAAY,IAAI,GAAhB,CADH;;AAAA;AAAA;AACb,8BADa,QACb,MADa;AAEhB,+BAFgB,GAEN;AACV,qCAAS,OADC;AAEV,kCAAM,GAFI;AAGV,kCAAM;AACF,sCAAM,wBADJ;AAEF,sCAAM;AAFJ,6BAHI;AAOV,mCAAO;AAPG,yBAFM;;;AAYhB,mCAZgB,GAYF,qBAAW,eAAX,CAA2B,uCAAc,OAAd,CAA3B,CAZE;;;;AAehB,mCAfgB,GAeF;AACd,kCAAM,0CADQ,E;AAEd,gCAAI,8CAFU,E;AAGd,qCAAS,wCAAwC,OAAO,IAH1C,E;AAId,kCAAM,OAAO,OAAP,GAAiB,6BAAjB,GAAiD,OAAO,K;AAJhD,yBAfE;;;;AAAA;AAAA,+BAuBH,sBAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACnD,wCAAY,QAAZ,CAAqB,WAArB,EAAkC,UAAU,KAAV,EAAiB,IAAjB,EAAuB;AACrD,oCAAI,KAAJ,EAAW;AACP,2CAAO,OAAP;AACH;AACD,wCAAQ,GAAR,CAAY,mBAAmB,KAAK,QAApC;AACA,wCAAQ,SAAR;AACH,6BAND;AAOH,yBARgB,CAvBG;;AAAA;AAuBpB,4BAAI,IAvBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAiCA,IAAI,MAAJ,CAAW,QAAQ,GAAR,CAAY,qBAAZ,IAAqC,QAAQ,GAAR,CAAY,IAAjD,IAAyD,IAApE,EAA0E,QAAQ,GAAR,CAAY,mBAAZ,IAAmC,WAA7G","file":"server.js","sourcesContent":["/**\n * Created by ashutosh on 23/04/16.\n */\n\n\nimport Koa from 'koa';\nimport serve from 'koa-static';\nimport Router from 'koa-router';\nimport send from 'koa-send';\nimport compress from 'koa-compress';\nimport asyncBusboy from 'async-busboy';\nimport zlib from 'zlib';\nimport qs from 'koa-qs';\nimport nodemailer from 'nodemailer';\nimport smtpTransport from 'nodemailer-smtp-transport';\nimport koaBunyanLogger from 'koa-bunyan-logger';\nconst app = new Koa();\napp.use(koaBunyanLogger());\napp.use(koaBunyanLogger.requestLogger());\nconst router = new Router();\napp.use(compress({flush: zlib.Z_SYNC_FLUSH}));\napp.use(serve(__dirname + \"/../Public\"));\napp.use(router.routes());\napp.use(router.allowedMethods());\nqs(app);\nrouter.get(\"/\", async (ctx, next) => {\n    await send(ctx, '../Public/index.html');\n});\n\nrouter.get(\"/resume\", async (ctx, next) => {\n    await send(ctx, 'Ashutosh-Resume.pdf', {root: __dirname + '/../Public/'});\n});\n\nrouter.post(\"/message\", async function (ctx, next) {\n    const {fields} = await asyncBusboy(ctx.req);\n    let options = {\n        service: 'Gmail',\n        port: 587,\n        auth: {\n            user: 'ashuanindian@gmail.com',\n            pass: '*********'\n        },\n        debug: true\n    };\n    // create reusable transporter object using the default SMTP transport\n    let transporter = nodemailer.createTransport(smtpTransport(options));\n\n// setup e-mail data with unicode symbols\n    let mailOptions = {\n        from: 'Ashutosh Sharma âœ” <ashutosh@ashu.online>', // sender address\n        to: 'ashuanindian@gmail.com, ashutosh@ashu.online', // list of receivers\n        subject: 'Hi Ashutosh you got a message from ' + fields.name, // Subject line\n        text: fields.message + \"\\n\\nPlease contact s/he on \" + fields.email // plaintext body\n    };\n\n// send mail with defined transport object\n    ctx.body = await new Promise(function(resolve, reject) {\n        transporter.sendMail(mailOptions, function (error, info) {\n            if (error) {\n                reject(\"error\");\n            }\n            console.log('Message sent: ' + info.response);\n            resolve(\"Success\");\n        });\n    });\n});\napp.listen(process.env.OPENSHIFT_NODEJS_PORT || process.env.PORT || 3000, process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1');"]}